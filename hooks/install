#!/bin/bash

set -eu # -x for verbose logging to juju debug-log

umask 002

install_root=`config-get install_root`
app_name=`config-get app_name`
app_dir="$install_root/local"
app_user=`config-get app_user`
app_port=`config-get app_port`
node_ver=`config-get node_ver`
node_server=`config-get node_server`
node_dir="/usr/local"

apt-get -y install -qq build-essential libcap2-bin

install_node_ppa() {
  juju-log "Installing node.js from PPA..."
  apt-get -y install -qq curl python-software-properties
  add-apt-repository ppa:chris-lea/node.js
  apt-get update
  apt-get -y install -qq nodejs
}

install_node() {
  juju-log "Installing node.js from source..."
  tar -xvzf node-v${node_ver}.tar.gz
  cd node-v${node_ver}
  ./configure
  make
  sudo make install
}

install_node_check() {
    juju-log "Starting node.js install..."
    wget http://nodejs.org/dist/v${node_ver}/node-v${node_ver}.tar.gz
    install_node
}
[[ -x ${node_dir}/bin/node ]] || install_node_check

install_mongodb() {
  apt-key adv --keyserver keyserver.ubuntu.com --recv 7F0CEB10
  echo 'deb http://downloads-distro.mongodb.org/repo/ubuntu-upstart dist 10gen' | tee /etc/apt/sources.list.d/10gen.list
  apt-get update
  apt-get -y install -qq mongodb-10gen
}
[[ -x /usr/bin/mongo ]] || install_mongodb

install_node() {
  juju-log "Installing node..."
  add-apt-repository ppa:chris-lea/node.js
  apt-get update
  apt-get -y install -qq nodejs build-essential curl
}
[[ -x /usr/bin/node ]] || install_node

install_app() {
  juju-log "Copying site-template directory..."
  cp --recursive $CHARM_DIR/local /opt
  cd /opt
    
  sudo chown -Rf ubuntu.ubuntu ${app_dir}
  
  if [ -f ${app_dir}/package.json ]; then
    cd ${app_dir} && sudo npm install
  fi

  # If Procfile found, use it with foreman module
  if [ -f ${app_dir}/Procfile ]; then
    sudo npm install -g foreman
  else
    cat > /etc/init/${app_name}.conf <<EOS
description "${app_name} server"
 
start on (net-device-up
          and local-filesystems
          and runlevel [2345])
stop on runlevel [!2345]
 
expect fork
respawn
 
script
  export HOME=/
  export NODE_PATH=${node_dir}/lib/node_modules
  exec ${node_dir}/bin/node ${app_dir}/${node_server} >> /var/log/${app_name}.log 2>&1 &
end script
EOS
  fi
}
[[ -d ${app_dir} ]] || install_app

open-port 80/TCP
open-port 443/TCP

cd ${app_dir}
setcap 'cap_net_bind_service=+ep' ${node_dir}/bin/node

juju-log "Delaying app startup until mongodb joins" 
#juju-log "starting app"
#service ${app_name} restart || service ${app_name} start

